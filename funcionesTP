create or replace function a_de_compra(nrotarj char , codsegur char , nrocomerc int , mont decimal) returns boolean as $$

declare

i record;

ultcompra record
ultrechaz record

nrorechaz int; 
nrocompr int;

X "monto total" ;???

begin


select max(nrocompra) into ultcompra from compra where nrotarjeta = nrotarj;
if not found then
 nrocompr := 0
end if;

select max(nrorechazo) into ultrechaz from rechazo where nrotarjeta = nrotarj;
if not found then
 nrorechaz := 0
end if;

for i in select * from tarjeta loop
	if i.nrotarjeta = nrotarj then
				
		if i.codseguridad = codsegur then
			
			if b.estado = 'anulado' then
				insert into rechazo values ();
				raise notice 'plazo de vigencia expirado';
				return false;
			end if;
			
			if b.estado = 'vencido' then
				insert into rechazo values ();
				raise notice 'la tarjeta se encuentra suspendida';
				return false;
			end if;
			
			if b.limitecompra > monto + X then
				insert into rechazo values ();
				raise notice 'supera limite de tarjeta';
				return false;
			else 
				insert into compra values (nrcompr+1,nrotarj,nrocomerc,current_timestamp,monto+X,true);
				return true;
			end if;
				
			
		else
			insert into rechazo values ();
			raise notice 'codigo de seguridad invalido';
			return false;
		end if;
	else
		raise notice 'tarjeta no valida o no vigente';
		insert into rechazo values ();
		return false;
	
	end if;	
end loop;


$$ language pgplsql;






create or replace function generar_resumen(nroclien int , peridoyear date) returns void as $$

declare 
t record

begin 

select * from tarjeta where

end;

$$ language psplsql;





