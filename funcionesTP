create or replace function a_de_compra(nrotarj char , codsegur char , nrocomerc int , mont decimal) returns boolean as $$

declare

i record;

ncompra record;
nrechaz record;
pagos record;

nrorechaz int; 
nrocompr int;

mtotal int;

begin

select max(nrocompra) into ncompra from compra where nrotarjeta = nrotarj;

if not found then	
	 nrocompr := 0; 
else 
	nrocompr:= ncompra.nrocompra;
	
end if;


select max(nrorechazo) into nrechaz from rechazo where nrotarjeta = nrotarj;

if not found then
	nrorechaz := 0;
else
	nrorechaz := nrechaz.nrorechazo;
end if;


select sum(monto) into pagos from consumo where nrotarjeta=nrotarj and codseguridad = codsegur and nrocomercio = nrocomerc;

mtotal := pagos.monto + mont;

for i in select * from tarjeta loop
	if i.nrotarjeta = nrotarj then
				
		if i.codseguridad = codsegur then
			
			if b.validahasta > current_date then
				insert into rechazo values (nrorechaz,nrotarj,nrocomerc,current_timestamp,mont,'plazo de vigencia expirado');
				return false;
			end if;
			
			if b.estado = 'suspendido' then
				insert into rechazo values (nrorechaz,nrotarj,nrocomerc,current_timestamp,mont,'la tarjeta se encuentra suspendida');
				return false;
			end if;
			
			if mtotal > b.limitecompra then
				insert into rechazo values (nrorechaz,nrotarj,nrocomerc,current_timestamp,mont,'supera limite de tarjeta');
				return false;
			else 
				insert into compra values (nrcompr+1,nrotarj,nrocomerc,current_timestamp,mont,true);
				return true;
			end if;
				
			
		else
			insert into rechazo values (nrorechaz,nrotarj,nrocomerc,current_timestamp,mont,'codigo de seguridad invalido');
			return false;
		end if;
	else
		insert into rechazo values (nrorechaz,nrotarj,nrocomerc,current_timestamp,mont,'tarjeta no valida o no vigente');
		return false;
	
	end if;
end loop;

end;
$$language plpgsql;





create or replace function generar_resumen(nroclien int , perido date) returns void as $$

declare 

p record;
c record;
nresumen record;
nroresum int;
year int;
month int;
aux record;
gasto record;


begin 

select max(nroresumen) into nresumen from cabecera;
if not found then
	nroresum := 0;
else 
	nroresum := nresumen.nroresumen;
end if;

year  := extract(year from periodo);  /* devuelve var? */
month := extract(month from periodo);

select * into p from cliente where nrocliente = nroclien ;
select * into c from tarjeta where nrocliente = nroclien and estado = vigente; 
select * into aux from cierre where ano = year and mes = month and terminacion = c.nrotarjeta;
select suma(monto) into gasto from consumo where nrotarjeta = c.nrotarjeta and codseguridad = c.codseguridad;



insert into cabecera values (nroresum+1,p.nombre,p.apellido,p.domicilio,c.nrotarjeta,aux.fechainicio,aux.fechacierre,aux.fechavto,gasto.monto);
insert into detalle values ();  /* consultar */

 
end;

$$ language psplsql;









create or replace function xxxxxxx returns trigger as $$

declare

begin 

end;

$$ language plpgsql;

create trigger alerta_a_clientes()

after update on rechazo

for each row

execute procedure 
